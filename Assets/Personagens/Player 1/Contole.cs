//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.0
//     from Assets/Personagens/Player 1/Contole.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Contole: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Contole()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Contole"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""3df8cfaa-4918-4702-86c1-3117bf38c378"",
            ""actions"": [
                {
                    ""name"": ""Movimento"",
                    ""type"": ""Value"",
                    ""id"": ""abd9587f-e6ce-4b7d-9025-13c99a4183be"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""Value"",
                    ""id"": ""29af9ba8-213d-4c6f-b061-933c45d8a063"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pulo"",
                    ""type"": ""Button"",
                    ""id"": ""cf364fa0-8711-4b8d-8978-d27e667883e3"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""IniciarDialogo"",
                    ""type"": ""Button"",
                    ""id"": ""562cd4f4-ebdd-44a5-83f6-042e370011db"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PassarDialogo"",
                    ""type"": ""Button"",
                    ""id"": ""9434a907-d0ea-4647-8fbb-f8a029c4f2c9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""15650699-c664-4b69-9449-42dcbbc3e8fc"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7cbed561-681f-418e-8d3a-39cf1c78e27c"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""eef249c3-70c4-4f53-a9b9-60e963494c47"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimento"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5267f9e7-b95d-4321-9a11-060bab40fc28"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""07d13f7e-8fdf-4c70-8473-7d04e4e1ebc6"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""41a950f5-9943-4db3-b2af-e3ad15dfa805"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2882d8fb-ddd2-430a-8b69-e5f301aac7e7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""2c20c26f-70ad-4a63-b7d5-7fd512a82ed7"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c04a35cf-63dc-4124-97bf-81e93931a569"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pulo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f581a98c-3da2-4453-96cb-78f2c3da65fb"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pulo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0babf66-94cc-4b2b-a06c-6757d31015e0"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""IniciarDialogo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d13a3788-af93-4bd3-aa34-5be83107b02d"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PassarDialogo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63cdcb31-bef8-4abc-8dba-09bfdc585254"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PassarDialogo"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Movimento = m_Player.FindAction("Movimento", throwIfNotFound: true);
        m_Player_Camera = m_Player.FindAction("Camera", throwIfNotFound: true);
        m_Player_Pulo = m_Player.FindAction("Pulo", throwIfNotFound: true);
        m_Player_IniciarDialogo = m_Player.FindAction("IniciarDialogo", throwIfNotFound: true);
        m_Player_PassarDialogo = m_Player.FindAction("PassarDialogo", throwIfNotFound: true);
    }

    ~@Contole()
    {
        UnityEngine.Debug.Assert(!m_Player.enabled, "This will cause a leak and performance issues, Contole.Player.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Movimento;
    private readonly InputAction m_Player_Camera;
    private readonly InputAction m_Player_Pulo;
    private readonly InputAction m_Player_IniciarDialogo;
    private readonly InputAction m_Player_PassarDialogo;
    public struct PlayerActions
    {
        private @Contole m_Wrapper;
        public PlayerActions(@Contole wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movimento => m_Wrapper.m_Player_Movimento;
        public InputAction @Camera => m_Wrapper.m_Player_Camera;
        public InputAction @Pulo => m_Wrapper.m_Player_Pulo;
        public InputAction @IniciarDialogo => m_Wrapper.m_Player_IniciarDialogo;
        public InputAction @PassarDialogo => m_Wrapper.m_Player_PassarDialogo;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Movimento.started += instance.OnMovimento;
            @Movimento.performed += instance.OnMovimento;
            @Movimento.canceled += instance.OnMovimento;
            @Camera.started += instance.OnCamera;
            @Camera.performed += instance.OnCamera;
            @Camera.canceled += instance.OnCamera;
            @Pulo.started += instance.OnPulo;
            @Pulo.performed += instance.OnPulo;
            @Pulo.canceled += instance.OnPulo;
            @IniciarDialogo.started += instance.OnIniciarDialogo;
            @IniciarDialogo.performed += instance.OnIniciarDialogo;
            @IniciarDialogo.canceled += instance.OnIniciarDialogo;
            @PassarDialogo.started += instance.OnPassarDialogo;
            @PassarDialogo.performed += instance.OnPassarDialogo;
            @PassarDialogo.canceled += instance.OnPassarDialogo;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Movimento.started -= instance.OnMovimento;
            @Movimento.performed -= instance.OnMovimento;
            @Movimento.canceled -= instance.OnMovimento;
            @Camera.started -= instance.OnCamera;
            @Camera.performed -= instance.OnCamera;
            @Camera.canceled -= instance.OnCamera;
            @Pulo.started -= instance.OnPulo;
            @Pulo.performed -= instance.OnPulo;
            @Pulo.canceled -= instance.OnPulo;
            @IniciarDialogo.started -= instance.OnIniciarDialogo;
            @IniciarDialogo.performed -= instance.OnIniciarDialogo;
            @IniciarDialogo.canceled -= instance.OnIniciarDialogo;
            @PassarDialogo.started -= instance.OnPassarDialogo;
            @PassarDialogo.performed -= instance.OnPassarDialogo;
            @PassarDialogo.canceled -= instance.OnPassarDialogo;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMovimento(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnPulo(InputAction.CallbackContext context);
        void OnIniciarDialogo(InputAction.CallbackContext context);
        void OnPassarDialogo(InputAction.CallbackContext context);
    }
}
